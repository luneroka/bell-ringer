# Local development: connect to PostgreSQL (Docker or localhost)
spring.datasource.url=jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5332}/${POSTGRES_DB:app_db}
spring.datasource.username=${POSTGRES_USER:app_user}
spring.datasource.password=${POSTGRES_PASSWORD:app_password}

# Hibernate / SQL - Reduce logging verbosity
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=true
# logging.level.org.hibernate.orm.jdbc.bind=TRACE
# logging.level.org.hibernate.SQL=DEBUG

# JDBC + data.sql initialization - Reduce logging verbosity
# logging.level.org.springframework.jdbc.core=DEBUG
# logging.level.org.springframework.jdbc.datasource.init=DEBUG
# logging.level.org.springframework.web=DEBUG
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

# Root logging level - set to WARN to reduce overall verbosity
logging.level.root=WARN

# Application-specific logging - keep at INFO level for important messages
logging.level.com.bell_ringer=INFO

# Spring Framework - reduce verbosity
logging.level.org.springframework=WARN
logging.level.org.springframework.security=WARN
logging.level.org.springframework.web=WARN

server.error.include-message=ALWAYS
server.error.include-binding-errors=ALWAYS
server.error.include-stacktrace=ON_PARAM
spring.web.resources.add-mappings=false

# Web + JSON - Reduce logging verbosity
# logging.level.org.springframework.http.converter.json=DEBUG

# Transactions (helpful during write flows) - Reduce logging verbosity
# logging.level.org.springframework.transaction=DEBUG

# Firebase and Security debugging - Reduce logging verbosity
# logging.level.com.bell_ringer.config.FirebaseAuthenticationFilter=DEBUG
# logging.level.org.springframework.security=DEBUG
# logging.level.com.bell_ringer.services.UserService=DEBUG